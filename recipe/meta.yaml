{% set version = "3.12.0" %}

package:
  name: flit-suite
  version: {{ version }}

source:
  url: https://pypi.org/packages/source/f/flit/flit-{{ version }}.tar.gz
  sha256: 1c80f34dd96992e7758b40423d2809f48f640ca285d0b7821825e50745ec3740
  folder: source

build:
  number: 0
  skip: True  # [py<38]

# Specifying `python` as a top-level build requirements to force conda to
# render the recipe correctly
requirements:
  host:
    - python

outputs:
  - name: flit-core
    version: {{ version }}
    build:
      script:
        # flit-core is a core python dependency and it used to bootstrap the whole packaging ecosystem.
        # Because of that, it cannot depend on anything except python itself.
        # We can't use pip because to build pip, we need setuptools and wheel. wheel requires flit-core.
        # So flit-core is "self-hosting" and provides its own build and install methods.
        - cd source/flit_core && {{ PYTHON }} -m flit_core.wheel
        - {{ PYTHON }} bootstrap_install.py dist/flit_core-{{ version }}-py3-none-any.whl
    requirements:
      host:
        - python
        - wheel
        - setuptools
      run:
        - python
    test:
      imports:
        - flit_core
        - flit_core.common
      requires:
        - pip
      commands:
        - pip check

  # When building out the initial package set for a new Python version the
  # recommendation is to build flit-core first.
  # If bootstrap: yes, build flit-core only; otherwise build all the outputs.
  {% if bootstrap != 'yes' %}
  - name: flit
    version: {{ version }}
    build:
      script_env:
        - FLIT_ROOT_INSTALL=1
      script: 
        - cd source/ && {{ PYTHON }} -m flit install --deps=none
      entry_points:
        - flit = flit:main
    requirements:
      host:
        - python
        - pip
        - docutils
        - requests
        - tomli-w
        - {{ pin_subpackage('flit-core', exact=True) }}
      run:
        - python
        - pip      # pip may be executed with 'install' argument passed to flit
        - docutils
        - requests
        - tomli-w
        - {{ pin_subpackage('flit-core', exact=True) }}
    test:
      source_files:
        - source/tests
        - source/pyproject.toml
      imports:
        - flit
        - flit.build
      requires:
        - pip
        - pytest >=2.7.3
        - testpath
        - responses
        - ripgrep
      commands:
        - pip check
        - echo ON  # [win]
        - flit --version | rg {{ version }}
        - cd source && pytest tests -v -p no:warnings # [not linux]
        - cd source && pytest tests -v \
          --deselect=tests/test_build.py::test_build_main \
          --deselect=tests/test_build.py::test_build_sdist_only \
          --deselect=tests/test_build.py::test_build_ns_main \
          --deselect=tests/test_install.py::InstallTests::test_install_requires \
          --deselect=tests/test_install.py::InstallTests::test_symlink_other_python \
          --deselect=tests/test_install.py::InstallTests::test_pip_install \
          --deselect=tests/test_install.py::test_install_requires_extra \
          --deselect=tests/test_install.py::test_test_writable_dir_win \
          --deselect=tests/test_sdist.py::test_get_files_list_git \
          --deselect=tests/test_sdist.py::test_get_files_list_hg  # [linux]
  {% endif %}

about:
  home: https://flit.pypa.io
  license: BSD-3-Clause
  license_family: BSD
  license_file: source/LICENSE
  summary: Simplified packaging of Python modules
  description: |
    Flit is a simple way to put Python packages and modules on PyPI. 
    It tries to require less thought about packaging and helps avoid 
    common mistakes. 
  dev_url: https://github.com/takluyver/flit
  doc_url: https://flit.pypa.io

extra:
  recipe-maintainers:
    - Carreau
    - minrk
    - takluyver
    - ocefpaf
  skip-lints:
    - wrong_output_script_key
